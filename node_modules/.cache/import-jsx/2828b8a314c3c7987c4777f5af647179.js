'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  const [playingDeck, setDeck] = React.useState(MultiShuffle());
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]);
  const [counter, setCounter] = React.useState(true); // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);

  React.useEffect(() => {
    const timer = setInterval(() => {
      //console.log('Intervalled');
      playingDeck.pop();
      setCounter(false);
    }, 1000);
    return () => {
      clearInterval(timer);
    };
  }, []);
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInVzZVN0YXRlIiwicGxheWVySGFuZCIsInNldFBsYXllciIsImRlYWxlckhhbmQiLCJzZXREZWFsZXIiLCJjb3VudGVyIiwic2V0Q291bnRlciIsInVzZUVmZmVjdCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJwb3AiLCJjbGVhckludGVydmFsIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLFFBQUQ7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUEsSUFBbkI7QUFBeUJDLEVBQUFBLEtBQXpCO0FBQWdDQyxFQUFBQTtBQUFoQyxJQUF1Q0wsT0FBTyxDQUFDLEtBQUQsQ0FBcEQsQyxDQUNBOzs7QUFDQSxNQUFNTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxXQUFELENBQTVCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVEsR0FBRyxHQUFHLE1BQU07QUFFakIsUUFBTSxDQUFDQyxXQUFELEVBQWNDLE9BQWQsSUFBeUJYLEtBQUssQ0FBQ1ksUUFBTixDQUFlTCxZQUFZLEVBQTNCLENBQS9CO0FBQ0EsUUFBTSxDQUFDTSxVQUFELEVBQWFDLFNBQWIsSUFBMEJkLEtBQUssQ0FBQ1ksUUFBTixDQUFlLEVBQWYsQ0FBaEM7QUFDQSxRQUFNLENBQUNHLFVBQUQsRUFBYUMsU0FBYixJQUEwQmhCLEtBQUssQ0FBQ1ksUUFBTixDQUFlLEVBQWYsQ0FBaEM7QUFDQSxRQUFNLENBQUNLLE9BQUQsRUFBVUMsVUFBVixJQUF3QmxCLEtBQUssQ0FBQ1ksUUFBTixDQUFlLElBQWYsQ0FBOUIsQ0FMaUIsQ0FPakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFaLEVBQUFBLEtBQUssQ0FBQ21CLFNBQU4sQ0FBZ0IsTUFBTTtBQUNyQixVQUFNQyxLQUFLLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO0FBQzlCO0FBQ0FYLE1BQUFBLFdBQVcsQ0FBQ1ksR0FBWjtBQUNBSixNQUFBQSxVQUFVLENBQUMsS0FBRCxDQUFWO0FBQ0EsS0FKdUIsRUFLdkIsSUFMdUIsQ0FBekI7QUFNQSxXQUFPLE1BQU07QUFDWkssTUFBQUEsYUFBYSxDQUFDSCxLQUFELENBQWI7QUFDQSxLQUZEO0FBR0EsR0FWRCxFQVVHLEVBVkg7QUFZQSxzQkFDQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLElBQUQsd0JBQW1CVixXQUFXLENBQUNjLE1BQS9CLE1BREQsQ0FERDtBQUtBLENBN0JEOztBQStCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7dXNlSW5wdXQsIHJlbmRlciwgVGV4dCwgQ29sb3IsIEJveH0gPSByZXF1aXJlKCdpbmsnKTtcbi8vIGNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoJ2luay10ZXh0LWlucHV0JykuZGVmYXVsdDtcbmNvbnN0IE11bHRpU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cblx0Y29uc3QgW3BsYXlpbmdEZWNrLCBzZXREZWNrXSA9IFJlYWN0LnVzZVN0YXRlKE11bHRpU2h1ZmZsZSgpKTtcblx0Y29uc3QgW3BsYXllckhhbmQsIHNldFBsYXllcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdGNvbnN0IFtkZWFsZXJIYW5kLCBzZXREZWFsZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHRjb25zdCBbY291bnRlciwgc2V0Q291bnRlcl0gPSBSZWFjdC51c2VTdGF0ZSh0cnVlKTtcblxuXHQvLyBzZXREZWNrKFtcblx0Ly8gXHQuLi5wbGF5aW5nRGVjayxcblx0Ly8gXHQuLi5kZWNrXG5cdC8vIF0pO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdFx0XHRcdC8vY29uc29sZS5sb2coJ0ludGVydmFsbGVkJyk7XG5cdFx0XHRcdHBsYXlpbmdEZWNrLnBvcCgpO1xuXHRcdFx0XHRzZXRDb3VudGVyKGZhbHNlKTtcblx0XHRcdH1cblx0XHRcdCwxMDAwKTtcblx0XHRyZXR1cm4gKCkgPT4ge1xuXHRcdFx0Y2xlYXJJbnRlcnZhbCh0aW1lcik7XG5cdFx0fTtcblx0fSwgW10pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveD5cblx0XHRcdDxUZXh0PkNhcmQgQ291bnQ6IHtwbGF5aW5nRGVjay5sZW5ndGh9IDwvVGV4dD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwOyJdfQ==