'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box
} = require('ink');

const TextInput = require('ink-text-input').default;

const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [playingDeck, setDeck] = React.useState([]);
  let deck = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck2 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck3 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck4 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck5 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck6 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  deck.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  React.useEffect(() => {
    console.log('decker');
  }, [deck]);
  deck.pop();
  deck.pop();
  deck.pop();
  deck.pop();
  deck.pop();
  deck.pop(); // setInterval(() => {
  // 	console.log('pp');
  // 	deck.pop();
  // }, 4000);
  // setTimeout(() => {
  // 	deck.pop()
  // }, 5000);
  // const shuffleNewDeck = () => {
  // 	//event.preventDefault();
  // 	let deck1 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck2 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck3 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck4 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck5 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck6 = Shuffle({Deck}).map(a => ({...a}));
  // 	deck1.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  // 	setDeck([
  // 	  ...playingDeck,
  // 	  ...deck1
  // 	]);
  // };

  const deal = person => {
    var card = playingDeck.pop();

    switch (person) {
      case "player":
        setPlayer([...playerHand, card]);
        break;

      case "dealer":
        setDealer([...playerHand, card]);
        break;

      default:
        break;
    }
  }; // React.useEffect(() => {
  //   shuffleNewDeck();
  // }, []);
  // setInterval(() => {
  // 	// deal("player");
  // 	console.log("111");
  // }, 10000);


  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Deck Count: ", deck.length));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJTaHVmZmxlIiwiRGVjayIsIkFwcCIsImRlY2siLCJtYXAiLCJhIiwiZGVjazIiLCJkZWNrMyIsImRlY2s0IiwiZGVjazUiLCJkZWNrNiIsInB1c2giLCJ1c2VFZmZlY3QiLCJjb25zb2xlIiwibG9nIiwicG9wIiwiZGVhbCIsInBlcnNvbiIsImNhcmQiLCJwbGF5aW5nRGVjayIsInNldFBsYXllciIsInBsYXllckhhbmQiLCJzZXREZWFsZXIiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsTUFBRDtBQUFTQyxFQUFBQSxJQUFUO0FBQWVDLEVBQUFBLEtBQWY7QUFBc0JDLEVBQUFBO0FBQXRCLElBQTZCSixPQUFPLENBQUMsS0FBRCxDQUExQzs7QUFDQSxNQUFNSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCTSxPQUE1Qzs7QUFDQSxNQUFNQyxPQUFPLEdBQUdQLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLE1BQU1RLElBQUksR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVMsR0FBRyxHQUFHLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBRUEsTUFBSUMsSUFBSSxHQUFHSCxPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWDtBQUNBLE1BQUlDLEtBQUssR0FBR04sT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQSxNQUFJRSxLQUFLLEdBQUdQLE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFaO0FBQ0EsTUFBSUcsS0FBSyxHQUFHUixPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWjtBQUNBLE1BQUlJLEtBQUssR0FBR1QsT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQSxNQUFJSyxLQUFLLEdBQUdWLE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFaO0FBRUFGLEVBQUFBLElBQUksQ0FBQ1EsSUFBTCxDQUFVLEdBQUdMLEtBQWIsRUFBb0IsR0FBR0MsS0FBdkIsRUFBOEIsR0FBR0MsS0FBakMsRUFBd0MsR0FBR0MsS0FBM0MsRUFBa0QsR0FBR0MsS0FBckQ7QUFFQWxCLEVBQUFBLEtBQUssQ0FBQ29CLFNBQU4sQ0FBZ0IsTUFBTTtBQUNyQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNBLEdBRkQsRUFFRyxDQUFDWCxJQUFELENBRkg7QUFJREEsRUFBQUEsSUFBSSxDQUFDWSxHQUFMO0FBQ0FaLEVBQUFBLElBQUksQ0FBQ1ksR0FBTDtBQUNBWixFQUFBQSxJQUFJLENBQUNZLEdBQUw7QUFDQVosRUFBQUEsSUFBSSxDQUFDWSxHQUFMO0FBQ0FaLEVBQUFBLElBQUksQ0FBQ1ksR0FBTDtBQUNBWixFQUFBQSxJQUFJLENBQUNZLEdBQUwsR0F2QmtCLENBd0JqQjtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBTUMsSUFBSSxHQUFJQyxNQUFELElBQVk7QUFDeEIsUUFBSUMsSUFBSSxHQUFHQyxXQUFXLENBQUNKLEdBQVosRUFBWDs7QUFDQSxZQUFRRSxNQUFSO0FBQ0MsV0FBSyxRQUFMO0FBQ0NHLFFBQUFBLFNBQVMsQ0FBQyxDQUFDLEdBQUdDLFVBQUosRUFBZUgsSUFBZixDQUFELENBQVQ7QUFDQTs7QUFDRCxXQUFLLFFBQUw7QUFDQ0ksUUFBQUEsU0FBUyxDQUFDLENBQUMsR0FBR0QsVUFBSixFQUFlSCxJQUFmLENBQUQsQ0FBVDtBQUNBOztBQUNEO0FBQ0M7QUFSRjtBQVVBLEdBWkQsQ0FqRGlCLENBK0RqQjtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUMsc0JBQ0Usb0JBQUMsR0FBRCxxQkFDRixvQkFBQyxJQUFELHdCQUFtQmYsSUFBSSxDQUFDb0IsTUFBeEIsQ0FERSxDQURGO0FBS0QsQ0E3RUQ7O0FBK0VBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJ2QixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHtyZW5kZXIsIFRleHQsIENvbG9yLCBCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKCdpbmstdGV4dC1pbnB1dCcpLmRlZmF1bHQ7XG5jb25zdCBTaHVmZmxlID0gcmVxdWlyZSgnLi9zaHVmZmxlJyk7XG5jb25zdCBEZWNrID0gcmVxdWlyZSgnLi9kZWNrJyk7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Ly8gY29uc3QgW3BsYXllckhhbmQsIHNldFBsYXllcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdC8vIGNvbnN0IFtkZWFsZXJIYW5kLCBzZXREZWFsZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbcGxheWluZ0RlY2ssIHNldERlY2tdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXG5cdGxldCBkZWNrID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2syID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s0ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s1ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0XG5cdGRlY2sucHVzaCguLi5kZWNrMiwgLi4uZGVjazMsIC4uLmRlY2s0LCAuLi5kZWNrNSwgLi4uZGVjazYpO1xuXHRcblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHsgXG5cdFx0Y29uc29sZS5sb2coJ2RlY2tlcicpO1xuXHR9LCBbZGVja10pXG5cdFxuZGVjay5wb3AoKTtcbmRlY2sucG9wKCk7XG5kZWNrLnBvcCgpO1xuZGVjay5wb3AoKTtcbmRlY2sucG9wKCk7XG5kZWNrLnBvcCgpO1xuXHQvLyBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdC8vIFx0Y29uc29sZS5sb2coJ3BwJyk7XG5cdC8vIFx0ZGVjay5wb3AoKTtcblx0Ly8gfSwgNDAwMCk7XG5cblx0Ly8gc2V0VGltZW91dCgoKSA9PiB7XG5cdC8vIFx0ZGVjay5wb3AoKVxuXHQvLyB9LCA1MDAwKTtcblx0XG5cdC8vIGNvbnN0IHNodWZmbGVOZXdEZWNrID0gKCkgPT4ge1xuXHQvLyBcdC8vZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0Ly8gXHRsZXQgZGVjazEgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gXHRsZXQgZGVjazQgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblxuXHQvLyBcdGRlY2sxLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblx0Ly8gXHRzZXREZWNrKFtcblx0Ly8gXHQgIC4uLnBsYXlpbmdEZWNrLFxuXHQvLyBcdCAgLi4uZGVjazFcblx0Ly8gXHRdKTtcblx0Ly8gfTtcblxuXHRjb25zdCBkZWFsID0gKHBlcnNvbikgPT4ge1xuXHRcdHZhciBjYXJkID0gcGxheWluZ0RlY2sucG9wKCk7XG5cdFx0c3dpdGNoIChwZXJzb24pIHtcblx0XHRcdGNhc2UgXCJwbGF5ZXJcIjpcblx0XHRcdFx0c2V0UGxheWVyKFsuLi5wbGF5ZXJIYW5kLGNhcmRdKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlIFwiZGVhbGVyXCI6XG5cdFx0XHRcdHNldERlYWxlcihbLi4ucGxheWVySGFuZCxjYXJkXSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9O1xuXG5cdC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdC8vICAgc2h1ZmZsZU5ld0RlY2soKTtcblx0Ly8gfSwgW10pO1xuXG5cdC8vIHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gXHQvLyBkZWFsKFwicGxheWVyXCIpO1xuXHQvLyBcdGNvbnNvbGUubG9nKFwiMTExXCIpO1xuXHQvLyB9LCAxMDAwMCk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuXHRcdDxUZXh0PkRlY2sgQ291bnQ6IHtkZWNrLmxlbmd0aH08L1RleHQ+XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=