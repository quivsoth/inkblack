'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  let deck = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck2 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck3 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck4 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck5 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck6 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  deck.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  const [playingDeck, setDeck] = React.useState(deck);
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]); // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);

  React.useEffect(() => {
    const timer = setInterval(() => {
      handleRemoveItem;
    }, 1000);
    return () => {
      clearInterval(timer);
    };
  }, []);

  const handleRemoveItem = () => {
    // assigning the list to temp variable
    const temp = [...playingDeck];
    temp.pop(); // updating the list

    setDeck(temp);
  };

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiU2h1ZmZsZSIsIkRlY2siLCJBcHAiLCJkZWNrIiwibWFwIiwiYSIsImRlY2syIiwiZGVjazMiLCJkZWNrNCIsImRlY2s1IiwiZGVjazYiLCJwdXNoIiwicGxheWluZ0RlY2siLCJzZXREZWNrIiwidXNlU3RhdGUiLCJwbGF5ZXJIYW5kIiwic2V0UGxheWVyIiwiZGVhbGVySGFuZCIsInNldERlYWxlciIsInVzZUVmZmVjdCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJoYW5kbGVSZW1vdmVJdGVtIiwiY2xlYXJJbnRlcnZhbCIsInRlbXAiLCJwb3AiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsUUFBRDtBQUFXQyxFQUFBQSxNQUFYO0FBQW1CQyxFQUFBQSxJQUFuQjtBQUF5QkMsRUFBQUEsS0FBekI7QUFBZ0NDLEVBQUFBO0FBQWhDLElBQXVDTCxPQUFPLENBQUMsS0FBRCxDQUFwRCxDLENBQ0E7OztBQUNBLE1BQU1NLE9BQU8sR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsTUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxNQUFNUSxHQUFHLEdBQUcsTUFBTTtBQUlqQixNQUFJQyxJQUFJLEdBQUdILE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFYO0FBQ0EsTUFBSUMsS0FBSyxHQUFHTixPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWjtBQUNBLE1BQUlFLEtBQUssR0FBR1AsT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQSxNQUFJRyxLQUFLLEdBQUdSLE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFaO0FBQ0EsTUFBSUksS0FBSyxHQUFHVCxPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWjtBQUNBLE1BQUlLLEtBQUssR0FBR1YsT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQUYsRUFBQUEsSUFBSSxDQUFDUSxJQUFMLENBQVUsR0FBR0wsS0FBYixFQUFvQixHQUFHQyxLQUF2QixFQUE4QixHQUFHQyxLQUFqQyxFQUF3QyxHQUFHQyxLQUEzQyxFQUFrRCxHQUFHQyxLQUFyRDtBQUVBLFFBQU0sQ0FBQ0UsV0FBRCxFQUFjQyxPQUFkLElBQXlCcEIsS0FBSyxDQUFDcUIsUUFBTixDQUFlWCxJQUFmLENBQS9CO0FBQ0EsUUFBTSxDQUFDWSxVQUFELEVBQWFDLFNBQWIsSUFBMEJ2QixLQUFLLENBQUNxQixRQUFOLENBQWUsRUFBZixDQUFoQztBQUNBLFFBQU0sQ0FBQ0csVUFBRCxFQUFhQyxTQUFiLElBQTBCekIsS0FBSyxDQUFDcUIsUUFBTixDQUFlLEVBQWYsQ0FBaEMsQ0FkaUIsQ0FnQmpCO0FBQ0E7QUFDQTtBQUNBOztBQUlBckIsRUFBQUEsS0FBSyxDQUFDMEIsU0FBTixDQUFnQixNQUFNO0FBQ3JCLFVBQU1DLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU07QUFDL0JDLE1BQUFBLGdCQUFnQjtBQUNoQixLQUZ3QixFQUV0QixJQUZzQixDQUF6QjtBQUlBLFdBQU8sTUFBTTtBQUNaQyxNQUFBQSxhQUFhLENBQUNILEtBQUQsQ0FBYjtBQUNBLEtBRkQ7QUFHQSxHQVJELEVBUUcsRUFSSDs7QUFVQSxRQUFNRSxnQkFBZ0IsR0FBRyxNQUFNO0FBQzlCO0FBQ0EsVUFBTUUsSUFBSSxHQUFHLENBQUMsR0FBR1osV0FBSixDQUFiO0FBQ0FZLElBQUFBLElBQUksQ0FBQ0MsR0FBTCxHQUg4QixDQUs5Qjs7QUFDQVosSUFBQUEsT0FBTyxDQUFDVyxJQUFELENBQVA7QUFDQSxHQVBEOztBQVVDLHNCQUNFLG9CQUFDLEdBQUQscUJBQ0Ysb0JBQUMsSUFBRCx3QkFBbUJaLFdBQVcsQ0FBQ2MsTUFBL0IsTUFERSxDQURGO0FBS0QsQ0FoREQ7O0FBa0RBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIxQixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHt1c2VJbnB1dCwgcmVuZGVyLCBUZXh0LCBDb2xvciwgQm94fSA9IHJlcXVpcmUoJ2luaycpO1xuLy8gY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cblxuXG5cdGxldCBkZWNrID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2syID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s0ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s1ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0ZGVjay5wdXNoKC4uLmRlY2syLCAuLi5kZWNrMywgLi4uZGVjazQsIC4uLmRlY2s1LCAuLi5kZWNrNik7XG5cblx0Y29uc3QgW3BsYXlpbmdEZWNrLCBzZXREZWNrXSA9IFJlYWN0LnVzZVN0YXRlKGRlY2spO1xuXHRjb25zdCBbcGxheWVySGFuZCwgc2V0UGxheWVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Y29uc3QgW2RlYWxlckhhbmQsIHNldERlYWxlcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cblx0Ly8gc2V0RGVjayhbXG5cdC8vIFx0Li4ucGxheWluZ0RlY2ssXG5cdC8vIFx0Li4uZGVja1xuXHQvLyBdKTtcblxuXG5cblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcblx0XHRcdGhhbmRsZVJlbW92ZUl0ZW1cblx0XHR9LCAxMDAwKTtcblxuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRjbGVhckludGVydmFsKHRpbWVyKTtcblx0XHR9O1xuXHR9LCBbXSk7XG5cblx0Y29uc3QgaGFuZGxlUmVtb3ZlSXRlbSA9ICgpID0+IHtcblx0XHQvLyBhc3NpZ25pbmcgdGhlIGxpc3QgdG8gdGVtcCB2YXJpYWJsZVxuXHRcdGNvbnN0IHRlbXAgPSBbLi4ucGxheWluZ0RlY2tdO1xuXHRcdHRlbXAucG9wKCk7XG5cblx0XHQvLyB1cGRhdGluZyB0aGUgbGlzdFxuXHRcdHNldERlY2sodGVtcCk7XG5cdH1cblxuXG4gIHJldHVybiAoXG4gICAgPEJveD5cblx0XHQ8VGV4dD5DYXJkIENvdW50OiB7cGxheWluZ0RlY2subGVuZ3RofSA8L1RleHQ+XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=