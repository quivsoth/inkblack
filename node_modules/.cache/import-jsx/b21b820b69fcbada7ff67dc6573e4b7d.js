'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  //const [playingDeck, setDeck] = React.useState(MultiShuffle());
  const [counter, setCounter] = useState(0);
  const renders = useRef(0); // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [counter, setCounter] = React.useState(0);
  // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);
  // React.useEffect(() => {
  // 	const timer = setInterval(() => {
  // 			//console.log('Intervalled');
  // 			playingDeck.pop();
  // 			setCounter(Math.round(Math.random() * 15));
  // 		}
  // 		,200);
  // 	return () => {
  // 		clearInterval(timer);
  // 	};
  // }, []);

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsImNvdW50ZXIiLCJzZXRDb3VudGVyIiwidXNlU3RhdGUiLCJyZW5kZXJzIiwidXNlUmVmIiwicGxheWluZ0RlY2siLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsUUFBRDtBQUFXQyxFQUFBQSxNQUFYO0FBQW1CQyxFQUFBQSxJQUFuQjtBQUF5QkMsRUFBQUEsS0FBekI7QUFBZ0NDLEVBQUFBO0FBQWhDLElBQXVDTCxPQUFPLENBQUMsS0FBRCxDQUFwRCxDLENBQ0E7OztBQUNBLE1BQU1NLFlBQVksR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBNUI7O0FBQ0EsTUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxNQUFNUSxHQUFHLEdBQUcsTUFBTTtBQUVqQjtBQUVBLFFBQU0sQ0FBQ0MsT0FBRCxFQUFVQyxVQUFWLElBQXdCQyxRQUFRLENBQUMsQ0FBRCxDQUF0QztBQUNFLFFBQU1DLE9BQU8sR0FBR0MsTUFBTSxDQUFDLENBQUQsQ0FBdEIsQ0FMZSxDQVFqQjtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxJQUFELHdCQUFtQkMsV0FBVyxDQUFDQyxNQUEvQixNQURELENBREQ7QUFLQSxDQWxDRDs7QUFvQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlQsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7dXNlSW5wdXQsIHJlbmRlciwgVGV4dCwgQ29sb3IsIEJveH0gPSByZXF1aXJlKCdpbmsnKTtcbi8vIGNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoJ2luay10ZXh0LWlucHV0JykuZGVmYXVsdDtcbmNvbnN0IE11bHRpU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cblx0Ly9jb25zdCBbcGxheWluZ0RlY2ssIHNldERlY2tdID0gUmVhY3QudXNlU3RhdGUoTXVsdGlTaHVmZmxlKCkpO1xuXG5cdGNvbnN0IFtjb3VudGVyLCBzZXRDb3VudGVyXSA9IHVzZVN0YXRlKDApO1xuICBcdGNvbnN0IHJlbmRlcnMgPSB1c2VSZWYoMCk7XG5cblxuXHQvLyBjb25zdCBbcGxheWVySGFuZCwgc2V0UGxheWVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Ly8gY29uc3QgW2RlYWxlckhhbmQsIHNldERlYWxlcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdC8vIGNvbnN0IFtjb3VudGVyLCBzZXRDb3VudGVyXSA9IFJlYWN0LnVzZVN0YXRlKDApO1xuXG5cdC8vIHNldERlY2soW1xuXHQvLyBcdC4uLnBsYXlpbmdEZWNrLFxuXHQvLyBcdC4uLmRlY2tcblx0Ly8gXSk7XG5cblx0Ly8gUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0Ly8gXHRjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gXHRcdFx0Ly9jb25zb2xlLmxvZygnSW50ZXJ2YWxsZWQnKTtcblx0Ly8gXHRcdFx0cGxheWluZ0RlY2sucG9wKCk7XG5cdC8vIFx0XHRcdHNldENvdW50ZXIoTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTUpKTtcblx0Ly8gXHRcdH1cblx0Ly8gXHRcdCwyMDApO1xuXHQvLyBcdHJldHVybiAoKSA9PiB7XG5cdC8vIFx0XHRjbGVhckludGVydmFsKHRpbWVyKTtcblx0Ly8gXHR9O1xuXHQvLyB9LCBbXSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94PlxuXHRcdFx0PFRleHQ+Q2FyZCBDb3VudDoge3BsYXlpbmdEZWNrLmxlbmd0aH0gPC9UZXh0PlxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7Il19