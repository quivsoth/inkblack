'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box
} = require('ink');

const {
  useInput
} = require('ink');

const TextInput = require('ink-text-input').default;

const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [playingDeck, setDeck] = React.useState([]);
  let deck = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck2 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck3 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck4 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck5 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck6 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  deck.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  React.useEffect(() => {
    console.log('decker');
  }, [deck]); // setInterval(() => {
  // 	console.log('pp');
  // 	deck.pop();
  // }, 4000);

  setTimeout(() => {
    deck.pop();
  }, 5000); // const shuffleNewDeck = () => {
  // 	//event.preventDefault();
  // 	let deck1 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck2 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck3 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck4 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck5 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck6 = Shuffle({Deck}).map(a => ({...a}));
  // 	deck1.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  // 	setDeck([
  // 	  ...playingDeck,
  // 	  ...deck1
  // 	]);
  // };

  const deal = person => {
    var card = playingDeck.pop();

    switch (person) {
      case "player":
        setPlayer([...playerHand, card]);
        break;

      case "dealer":
        setDealer([...playerHand, card]);
        break;

      default:
        break;
    }
  }; // React.useEffect(() => {
  //   shuffleNewDeck();
  // }, []);
  // setInterval(() => {
  // 	// deal("player");
  // 	console.log("111");
  // }, 10000);


  const UserInput = () => {
    useInput((input, key) => {
      if (input === 'q') {
        console.log("quitty");
      }

      if (key.leftArrow) {
        // Left arrow key pressed
        console.log("lefty");
      }
    });
    return "";
  };

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Deck Count: ", deck.length));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsInVzZUlucHV0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIlNodWZmbGUiLCJEZWNrIiwiQXBwIiwiZGVjayIsIm1hcCIsImEiLCJkZWNrMiIsImRlY2szIiwiZGVjazQiLCJkZWNrNSIsImRlY2s2IiwicHVzaCIsInVzZUVmZmVjdCIsImNvbnNvbGUiLCJsb2ciLCJzZXRUaW1lb3V0IiwicG9wIiwiZGVhbCIsInBlcnNvbiIsImNhcmQiLCJwbGF5aW5nRGVjayIsInNldFBsYXllciIsInBsYXllckhhbmQiLCJzZXREZWFsZXIiLCJVc2VySW5wdXQiLCJpbnB1dCIsImtleSIsImxlZnRBcnJvdyIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFDQyxFQUFBQSxNQUFEO0FBQVNDLEVBQUFBLElBQVQ7QUFBZUMsRUFBQUEsS0FBZjtBQUFzQkMsRUFBQUE7QUFBdEIsSUFBNkJKLE9BQU8sQ0FBQyxLQUFELENBQTFDOztBQUNBLE1BQU07QUFBQ0ssRUFBQUE7QUFBRCxJQUFhTCxPQUFPLENBQUMsS0FBRCxDQUExQjs7QUFFQSxNQUFNTSxTQUFTLEdBQUdOLE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCTyxPQUE1Qzs7QUFDQSxNQUFNQyxPQUFPLEdBQUdSLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLE1BQU1TLElBQUksR0FBR1QsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVUsR0FBRyxHQUFHLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBRUEsTUFBSUMsSUFBSSxHQUFHSCxPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUss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OlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3JlbmRlciwgVGV4dCwgQ29sb3IsIEJveH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IHt1c2VJbnB1dH0gPSByZXF1aXJlKCdpbmsnKTtcblxuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdC8vIGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Ly8gY29uc3QgW3BsYXlpbmdEZWNrLCBzZXREZWNrXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuXHRsZXQgZGVjayA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrMyA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNCA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdFxuXHRkZWNrLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblx0XG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7IFxuXHRcdGNvbnNvbGUubG9nKCdkZWNrZXInKTtcblx0fSwgW2RlY2tdKVxuXG5cblx0Ly8gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuXHQvLyBcdGNvbnNvbGUubG9nKCdwcCcpO1xuXHQvLyBcdGRlY2sucG9wKCk7XG5cdC8vIH0sIDQwMDApO1xuXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdGRlY2sucG9wKClcblx0fSwgNTAwMCk7XG5cdFxuXHQvLyBjb25zdCBzaHVmZmxlTmV3RGVjayA9ICgpID0+IHtcblx0Ly8gXHQvL2V2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdC8vIFx0bGV0IGRlY2sxID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gXHRsZXQgZGVjazIgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrMyA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2s0ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gXHRsZXQgZGVjazUgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrNiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cblx0Ly8gXHRkZWNrMS5wdXNoKC4uLmRlY2syLCAuLi5kZWNrMywgLi4uZGVjazQsIC4uLmRlY2s1LCAuLi5kZWNrNik7XG5cdC8vIFx0c2V0RGVjayhbXG5cdC8vIFx0ICAuLi5wbGF5aW5nRGVjayxcblx0Ly8gXHQgIC4uLmRlY2sxXG5cdC8vIFx0XSk7XG5cdC8vIH07XG5cblx0Y29uc3QgZGVhbCA9IChwZXJzb24pID0+IHtcblx0XHR2YXIgY2FyZCA9IHBsYXlpbmdEZWNrLnBvcCgpO1xuXHRcdHN3aXRjaCAocGVyc29uKSB7XG5cdFx0XHRjYXNlIFwicGxheWVyXCI6XG5cdFx0XHRcdHNldFBsYXllcihbLi4ucGxheWVySGFuZCxjYXJkXSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBcImRlYWxlclwiOlxuXHRcdFx0XHRzZXREZWFsZXIoWy4uLnBsYXllckhhbmQsY2FyZF0pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fTtcblxuXHQvLyBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHQvLyAgIHNodWZmbGVOZXdEZWNrKCk7XG5cdC8vIH0sIFtdKTtcblxuXHQvLyBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdC8vIFx0Ly8gZGVhbChcInBsYXllclwiKTtcblx0Ly8gXHRjb25zb2xlLmxvZyhcIjExMVwiKTtcblx0Ly8gfSwgMTAwMDApO1xuXG5cdGNvbnN0IFVzZXJJbnB1dCA9ICgpID0+IHtcblx0XHR1c2VJbnB1dCgoaW5wdXQsIGtleSkgPT4ge1xuXHRcdFx0aWYgKGlucHV0ID09PSAncScpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coXCJxdWl0dHlcIik7XG5cdFx0XHR9XG5cdFxuXHRcdFx0aWYgKGtleS5sZWZ0QXJyb3cpIHtcblx0XHRcdFx0Ly8gTGVmdCBhcnJvdyBrZXkgcHJlc3NlZFxuXHRcdFx0XHRjb25zb2xlLmxvZyhcImxlZnR5XCIpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcblx0XHRyZXR1cm4gXCJcIjtcblx0fTtcblxuXG4gIHJldHVybiAoXG4gICAgPEJveD5cblx0XHQ8VGV4dD5EZWNrIENvdW50OiB7ZGVjay5sZW5ndGh9PC9UZXh0PlxuICAgIDwvQm94PlxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7Il19