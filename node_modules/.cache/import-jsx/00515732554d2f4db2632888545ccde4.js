'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  let deck = MultiShuffle(Deck);
  const [playingDeck, setDeck] = React.useState(deck);
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]); // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);

  React.useEffect(() => {
    const timer = setInterval(() => handleRemoveItem(), 1000);
    return () => {
      clearInterval(timer);
    };
  }, []);

  const handleRemoveItem = () => {// 	let e = playingDeck[playingDeck.length - 1];
    // 	let newArray = playingDeck.filter(function(remainder) {
    // 		return remainder != e;
    // 	});
    // 	console.log(newArray.length);
    // 	setDeck(newArray);
    // 	// setDeck(playingDeck.filter((e)=>(e !== e)));
    // 	console.log("handleRemoveItem: " + playingDeck.length);
  };

  return /*#__PURE__*/React.createElement(Box, null);
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsImRlY2siLCJwbGF5aW5nRGVjayIsInNldERlY2siLCJ1c2VTdGF0ZSIsInBsYXllckhhbmQiLCJzZXRQbGF5ZXIiLCJkZWFsZXJIYW5kIiwic2V0RGVhbGVyIiwidXNlRWZmZWN0IiwidGltZXIiLCJzZXRJbnRlcnZhbCIsImhhbmRsZVJlbW92ZUl0ZW0iLCJjbGVhckludGVydmFsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLFFBQUQ7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUEsSUFBbkI7QUFBeUJDLEVBQUFBLEtBQXpCO0FBQWdDQyxFQUFBQTtBQUFoQyxJQUF1Q0wsT0FBTyxDQUFDLEtBQUQsQ0FBcEQsQyxDQUNBOzs7QUFDQSxNQUFNTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxXQUFELENBQTVCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVEsR0FBRyxHQUFHLE1BQU07QUFFakIsTUFBSUMsSUFBSSxHQUFHSCxZQUFZLENBQUNDLElBQUQsQ0FBdkI7QUFFQSxRQUFNLENBQUNHLFdBQUQsRUFBY0MsT0FBZCxJQUF5QlosS0FBSyxDQUFDYSxRQUFOLENBQWVILElBQWYsQ0FBL0I7QUFDQSxRQUFNLENBQUNJLFVBQUQsRUFBYUMsU0FBYixJQUEwQmYsS0FBSyxDQUFDYSxRQUFOLENBQWUsRUFBZixDQUFoQztBQUNBLFFBQU0sQ0FBQ0csVUFBRCxFQUFhQyxTQUFiLElBQTBCakIsS0FBSyxDQUFDYSxRQUFOLENBQWUsRUFBZixDQUFoQyxDQU5pQixDQVFqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQWIsRUFBQUEsS0FBSyxDQUFDa0IsU0FBTixDQUFnQixNQUFNO0FBQ3JCLFVBQU1DLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU1DLGdCQUFnQixFQUF2QixFQUEyQixJQUEzQixDQUF6QjtBQUNBLFdBQU8sTUFBTTtBQUNaQyxNQUFBQSxhQUFhLENBQUNILEtBQUQsQ0FBYjtBQUNBLEtBRkQ7QUFHQSxHQUxELEVBS0csRUFMSDs7QUFPQSxRQUFNRSxnQkFBZ0IsR0FBRyxNQUFNLENBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQyxHQVREOztBQVVBLHNCQUNDLG9CQUFDLEdBQUQsT0FERDtBQUtBLENBbkNEOztBQXFDQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCZixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHt1c2VJbnB1dCwgcmVuZGVyLCBUZXh0LCBDb2xvciwgQm94fSA9IHJlcXVpcmUoJ2luaycpO1xuLy8gY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgTXVsdGlTaHVmZmxlID0gcmVxdWlyZSgnLi9zaHVmZmxlJyk7XG5jb25zdCBEZWNrID0gcmVxdWlyZSgnLi9kZWNrJyk7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblxuXHRsZXQgZGVjayA9IE11bHRpU2h1ZmZsZShEZWNrKTtcblxuXHRjb25zdCBbcGxheWluZ0RlY2ssIHNldERlY2tdID0gUmVhY3QudXNlU3RhdGUoZGVjayk7XG5cdGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHRjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuXHQvLyBzZXREZWNrKFtcblx0Ly8gXHQuLi5wbGF5aW5nRGVjayxcblx0Ly8gXHQuLi5kZWNrXG5cdC8vIF0pO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiBoYW5kbGVSZW1vdmVJdGVtKCksIDEwMDApO1xuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRjbGVhckludGVydmFsKHRpbWVyKTtcblx0XHR9O1xuXHR9LCBbXSk7XG5cblx0Y29uc3QgaGFuZGxlUmVtb3ZlSXRlbSA9ICgpID0+IHtcblx0Ly8gXHRsZXQgZSA9IHBsYXlpbmdEZWNrW3BsYXlpbmdEZWNrLmxlbmd0aCAtIDFdO1xuXHQvLyBcdGxldCBuZXdBcnJheSA9IHBsYXlpbmdEZWNrLmZpbHRlcihmdW5jdGlvbihyZW1haW5kZXIpIHtcblx0Ly8gXHRcdHJldHVybiByZW1haW5kZXIgIT0gZTtcblx0Ly8gXHR9KTtcblx0Ly8gXHRjb25zb2xlLmxvZyhuZXdBcnJheS5sZW5ndGgpO1xuXHQvLyBcdHNldERlY2sobmV3QXJyYXkpO1xuXHQvLyBcdC8vIHNldERlY2socGxheWluZ0RlY2suZmlsdGVyKChlKT0+KGUgIT09IGUpKSk7XG5cdC8vIFx0Y29uc29sZS5sb2coXCJoYW5kbGVSZW1vdmVJdGVtOiBcIiArIHBsYXlpbmdEZWNrLmxlbmd0aCk7XG5cdH1cblx0cmV0dXJuIChcblx0XHQ8Qm94PlxuXHRcdFx0ey8qIDxUZXh0PkNhcmQgQ291bnQ6IHtwbGF5aW5nRGVjay5sZW5ndGh9IDwvVGV4dD4gKi99XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=