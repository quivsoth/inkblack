'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  const [playingDeck, setDeck] = React.useState(MultiShuffle());
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]); // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);

  React.useEffect(() => {
    const timer = setInterval(() => handleRemoveItem(), 1000);
    return () => {
      clearInterval(timer);
    };
  }, []);

  const handleRemoveItem = () => {// 	let e = playingDeck[playingDeck.length - 1];
    // 	let newArray = playingDeck.filter(function(remainder) {
    // 		return remainder != e;
    // 	});
    // 	console.log(newArray.length);
    // 	setDeck(newArray);
    // 	// setDeck(playingDeck.filter((e)=>(e !== e)));
    // 	console.log("handleRemoveItem: " + playingDeck.length);
  };

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInVzZVN0YXRlIiwicGxheWVySGFuZCIsInNldFBsYXllciIsImRlYWxlckhhbmQiLCJzZXREZWFsZXIiLCJ1c2VFZmZlY3QiLCJ0aW1lciIsInNldEludGVydmFsIiwiaGFuZGxlUmVtb3ZlSXRlbSIsImNsZWFySW50ZXJ2YWwiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsUUFBRDtBQUFXQyxFQUFBQSxNQUFYO0FBQW1CQyxFQUFBQSxJQUFuQjtBQUF5QkMsRUFBQUEsS0FBekI7QUFBZ0NDLEVBQUFBO0FBQWhDLElBQXVDTCxPQUFPLENBQUMsS0FBRCxDQUFwRCxDLENBQ0E7OztBQUNBLE1BQU1NLFlBQVksR0FBR04sT0FBTyxDQUFDLFdBQUQsQ0FBNUI7O0FBQ0EsTUFBTU8sSUFBSSxHQUFHUCxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxNQUFNUSxHQUFHLEdBQUcsTUFBTTtBQUVqQixRQUFNLENBQUNDLFdBQUQsRUFBY0MsT0FBZCxJQUF5QlgsS0FBSyxDQUFDWSxRQUFOLENBQWVMLFlBQVksRUFBM0IsQ0FBL0I7QUFDQSxRQUFNLENBQUNNLFVBQUQsRUFBYUMsU0FBYixJQUEwQmQsS0FBSyxDQUFDWSxRQUFOLENBQWUsRUFBZixDQUFoQztBQUNBLFFBQU0sQ0FBQ0csVUFBRCxFQUFhQyxTQUFiLElBQTBCaEIsS0FBSyxDQUFDWSxRQUFOLENBQWUsRUFBZixDQUFoQyxDQUppQixDQU1qQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQVosRUFBQUEsS0FBSyxDQUFDaUIsU0FBTixDQUFnQixNQUFNO0FBQ3JCLFVBQU1DLEtBQUssR0FBR0MsV0FBVyxDQUFDLE1BQU1DLGdCQUFnQixFQUF2QixFQUEyQixJQUEzQixDQUF6QjtBQUNBLFdBQU8sTUFBTTtBQUNaQyxNQUFBQSxhQUFhLENBQUNILEtBQUQsQ0FBYjtBQUNBLEtBRkQ7QUFHQSxHQUxELEVBS0csRUFMSDs7QUFPQSxRQUFNRSxnQkFBZ0IsR0FBRyxNQUFNLENBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQyxHQVREOztBQVVBLHNCQUNDLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsSUFBRCx3QkFBbUJWLFdBQVcsQ0FBQ1ksTUFBL0IsTUFERCxDQUREO0FBS0EsQ0FqQ0Q7O0FBbUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJmLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3VzZUlucHV0LCByZW5kZXIsIFRleHQsIENvbG9yLCBCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG4vLyBjb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKCdpbmstdGV4dC1pbnB1dCcpLmRlZmF1bHQ7XG5jb25zdCBNdWx0aVNodWZmbGUgPSByZXF1aXJlKCcuL3NodWZmbGUnKTtcbmNvbnN0IERlY2sgPSByZXF1aXJlKCcuL2RlY2snKTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXG5cdGNvbnN0IFtwbGF5aW5nRGVjaywgc2V0RGVja10gPSBSZWFjdC51c2VTdGF0ZShNdWx0aVNodWZmbGUoKSk7XG5cdGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHRjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuXHQvLyBzZXREZWNrKFtcblx0Ly8gXHQuLi5wbGF5aW5nRGVjayxcblx0Ly8gXHQuLi5kZWNrXG5cdC8vIF0pO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiBoYW5kbGVSZW1vdmVJdGVtKCksIDEwMDApO1xuXHRcdHJldHVybiAoKSA9PiB7XG5cdFx0XHRjbGVhckludGVydmFsKHRpbWVyKTtcblx0XHR9O1xuXHR9LCBbXSk7XG5cblx0Y29uc3QgaGFuZGxlUmVtb3ZlSXRlbSA9ICgpID0+IHtcblx0Ly8gXHRsZXQgZSA9IHBsYXlpbmdEZWNrW3BsYXlpbmdEZWNrLmxlbmd0aCAtIDFdO1xuXHQvLyBcdGxldCBuZXdBcnJheSA9IHBsYXlpbmdEZWNrLmZpbHRlcihmdW5jdGlvbihyZW1haW5kZXIpIHtcblx0Ly8gXHRcdHJldHVybiByZW1haW5kZXIgIT0gZTtcblx0Ly8gXHR9KTtcblx0Ly8gXHRjb25zb2xlLmxvZyhuZXdBcnJheS5sZW5ndGgpO1xuXHQvLyBcdHNldERlY2sobmV3QXJyYXkpO1xuXHQvLyBcdC8vIHNldERlY2socGxheWluZ0RlY2suZmlsdGVyKChlKT0+KGUgIT09IGUpKSk7XG5cdC8vIFx0Y29uc29sZS5sb2coXCJoYW5kbGVSZW1vdmVJdGVtOiBcIiArIHBsYXlpbmdEZWNrLmxlbmd0aCk7XG5cdH1cblx0cmV0dXJuIChcblx0XHQ8Qm94PlxuXHRcdFx0PFRleHQ+Q2FyZCBDb3VudDoge3BsYXlpbmdEZWNrLmxlbmd0aH0gPC9UZXh0PlxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7Il19