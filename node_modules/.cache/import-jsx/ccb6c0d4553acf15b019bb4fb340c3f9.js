'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  const [playingDeck, setDeck] = React.useState(MultiShuffle()); // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);

  const [, forceUpdate] = React.useReducer(x => x + 1, 0);
  React.useEffect(() => {
    console.log('e');
    const timer = setInterval(() => {
      playingDeck.pop();
      forceUpdate();
    }, 400);
    if (playingDeck.length == 0) clearInterval(timer);
  }, []);
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInVzZVN0YXRlIiwiZm9yY2VVcGRhdGUiLCJ1c2VSZWR1Y2VyIiwieCIsInVzZUVmZmVjdCIsImNvbnNvbGUiLCJsb2ciLCJ0aW1lciIsInNldEludGVydmFsIiwicG9wIiwibGVuZ3RoIiwiY2xlYXJJbnRlcnZhbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFDQyxFQUFBQSxRQUFEO0FBQVdDLEVBQUFBLE1BQVg7QUFBbUJDLEVBQUFBLElBQW5CO0FBQXlCQyxFQUFBQSxLQUF6QjtBQUFnQ0MsRUFBQUE7QUFBaEMsSUFBdUNMLE9BQU8sQ0FBQyxLQUFELENBQXBELEMsQ0FDQTs7O0FBQ0EsTUFBTU0sWUFBWSxHQUFHTixPQUFPLENBQUMsV0FBRCxDQUE1Qjs7QUFDQSxNQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUlBLE1BQU1RLEdBQUcsR0FBRyxNQUFNO0FBQ2pCLFFBQU0sQ0FBQ0MsV0FBRCxFQUFjQyxPQUFkLElBQXlCWCxLQUFLLENBQUNZLFFBQU4sQ0FBZUwsWUFBWSxFQUEzQixDQUEvQixDQURpQixDQUVqQjtBQUNBOztBQUNBLFFBQU0sR0FBR00sV0FBSCxJQUFrQmIsS0FBSyxDQUFDYyxVQUFOLENBQWlCQyxDQUFDLElBQUlBLENBQUMsR0FBRyxDQUExQixFQUE2QixDQUE3QixDQUF4QjtBQUVBZixFQUFBQSxLQUFLLENBQUNnQixTQUFOLENBQWdCLE1BQU07QUFDckJDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEdBQVo7QUFDQSxVQUFNQyxLQUFLLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO0FBQzlCVixNQUFBQSxXQUFXLENBQUNXLEdBQVo7QUFDQVIsTUFBQUEsV0FBVztBQUNYLEtBSHVCLEVBR3RCLEdBSHNCLENBQXpCO0FBSUEsUUFBR0gsV0FBVyxDQUFDWSxNQUFaLElBQXNCLENBQXpCLEVBQTJCQyxhQUFhLENBQUNKLEtBQUQsQ0FBYjtBQUMzQixHQVBELEVBT0csRUFQSDtBQVFBLHNCQUNDLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsSUFBRCx3QkFBbUJULFdBQVcsQ0FBQ1ksTUFBL0IsTUFERCxDQUREO0FBTUEsQ0FwQkQ7O0FBc0JBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJoQixHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHt1c2VJbnB1dCwgcmVuZGVyLCBUZXh0LCBDb2xvciwgQm94fSA9IHJlcXVpcmUoJ2luaycpO1xuLy8gY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgTXVsdGlTaHVmZmxlID0gcmVxdWlyZSgnLi9zaHVmZmxlJyk7XG5jb25zdCBEZWNrID0gcmVxdWlyZSgnLi9kZWNrJyk7XG5cblxuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdGNvbnN0IFtwbGF5aW5nRGVjaywgc2V0RGVja10gPSBSZWFjdC51c2VTdGF0ZShNdWx0aVNodWZmbGUoKSk7XG5cdC8vIGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Y29uc3QgWywgZm9yY2VVcGRhdGVdID0gUmVhY3QudXNlUmVkdWNlcih4ID0+IHggKyAxLCAwKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdlJyk7XG5cdFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdFx0XHRcdHBsYXlpbmdEZWNrLnBvcCgpO1xuXHRcdFx0XHRmb3JjZVVwZGF0ZSgpO1xuXHRcdFx0fSw0MDApO1xuXHRcdGlmKHBsYXlpbmdEZWNrLmxlbmd0aCA9PSAwKWNsZWFySW50ZXJ2YWwodGltZXIpO1xuXHR9LCBbXSk7XG5cdHJldHVybiAoXG5cdFx0PEJveD5cblx0XHRcdDxUZXh0PkNhcmQgQ291bnQ6IHtwbGF5aW5nRGVjay5sZW5ndGh9IDwvVGV4dD5cblx0XHRcdHsvKiA8VGV4dD5Db3VudDoge2NvdW50fTwvVGV4dD4gKi99XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=