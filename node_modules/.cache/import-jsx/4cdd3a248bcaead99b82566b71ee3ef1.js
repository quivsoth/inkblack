'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box
} = require('ink');

const TextInput = require('ink-text-input').default;

const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [playingDeck, setDeck] = React.useState([]);
  const [count, setCount] = React.useState(0); // let deck = Shuffle({Deck}).map(a => ({...a}));
  // let deck2 = Shuffle({Deck}).map(a => ({...a}));
  // let deck3 = Shuffle({Deck}).map(a => ({...a}));
  // let deck4 = Shuffle({Deck}).map(a => ({...a}));
  // let deck5 = Shuffle({Deck}).map(a => ({...a}));
  // let deck6 = Shuffle({Deck}).map(a => ({...a}));
  // deck.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  // React.useEffect(() => {
  // 	console.log('decker');
  // }, [deck])

  React.useEffect(() => {
    setTimeout(() => {
      setCount(count => count + 1);
    }, 4000);
  }); // const interval = setInterval(() => {
  //   setCount(count => count + 1);
  // }, 100);
  // return () => clearInterval(interval);
  // }, []);
  // setInterval(() => {
  // 	console.log('pp');
  // 	deck.pop();
  // }, 4000);
  // setTimeout(() => {
  // 	deck.pop()
  // }, 5000);
  // const shuffleNewDeck = () => {
  // 	//event.preventDefault();
  // 	let deck1 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck2 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck3 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck4 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck5 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck6 = Shuffle({Deck}).map(a => ({...a}));
  // 	deck1.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  // 	setDeck([
  // 	  ...playingDeck,
  // 	  ...deck1
  // 	]);
  // };
  // const deal = (person) => {
  // 	var card = playingDeck.pop();
  // 	switch (person) {
  // 		case "player":
  // 			setPlayer([...playerHand,card]);
  // 			break;
  // 		case "dealer":
  // 			setDealer([...playerHand,card]);
  // 			break;
  // 		default:
  // 			break;
  // 	}
  // };
  // React.useEffect(() => {
  //   shuffleNewDeck();
  // }, []);
  // setInterval(() => {
  // 	// deal("player");
  // 	console.log("111");
  // }, 10000);

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Count: "), ";");
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJTaHVmZmxlIiwiRGVjayIsIkFwcCIsImNvdW50Iiwic2V0Q291bnQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInNldFRpbWVvdXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsTUFBRDtBQUFTQyxFQUFBQSxJQUFUO0FBQWVDLEVBQUFBLEtBQWY7QUFBc0JDLEVBQUFBO0FBQXRCLElBQTZCSixPQUFPLENBQUMsS0FBRCxDQUExQzs7QUFDQSxNQUFNSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCTSxPQUE1Qzs7QUFDQSxNQUFNQyxPQUFPLEdBQUdQLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLE1BQU1RLElBQUksR0FBR1IsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVMsR0FBRyxHQUFHLE1BQU07QUFDakI7QUFDQTtBQUNBO0FBQ0EsUUFBTSxDQUFDQyxLQUFELEVBQVFDLFFBQVIsSUFBb0JaLEtBQUssQ0FBQ2EsUUFBTixDQUFlLENBQWYsQ0FBMUIsQ0FKaUIsQ0FNakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBRUFiLEVBQUFBLEtBQUssQ0FBQ2MsU0FBTixDQUFnQixNQUFNO0FBQ3JCQyxJQUFBQSxVQUFVLENBQUMsTUFBTTtBQUNoQkgsTUFBQUEsUUFBUSxDQUFDRCxLQUFLLElBQUlBLEtBQUssR0FBRyxDQUFsQixDQUFSO0FBQ0EsS0FGUyxFQUVQLElBRk8sQ0FBVjtBQUdBLEdBSkQsRUFuQmlCLENBeUJqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQyxzQkFDRSxvQkFBQyxHQUFELHFCQUVGLG9CQUFDLElBQUQsa0JBRkUsTUFERjtBQU1ELENBdEZEOztBQXdGQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxHQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHtyZW5kZXIsIFRleHQsIENvbG9yLCBCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKCdpbmstdGV4dC1pbnB1dCcpLmRlZmF1bHQ7XG5jb25zdCBTaHVmZmxlID0gcmVxdWlyZSgnLi9zaHVmZmxlJyk7XG5jb25zdCBEZWNrID0gcmVxdWlyZSgnLi9kZWNrJyk7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Ly8gY29uc3QgW3BsYXllckhhbmQsIHNldFBsYXllcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdC8vIGNvbnN0IFtkZWFsZXJIYW5kLCBzZXREZWFsZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbcGxheWluZ0RlY2ssIHNldERlY2tdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHRjb25zdCBbY291bnQsIHNldENvdW50XSA9IFJlYWN0LnVzZVN0YXRlKDApO1xuXG5cdC8vIGxldCBkZWNrID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gbGV0IGRlY2syID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gbGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gbGV0IGRlY2s0ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gbGV0IGRlY2s1ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gbGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblxuXHQvLyBkZWNrLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblxuXHQvLyBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHQvLyBcdGNvbnNvbGUubG9nKCdkZWNrZXInKTtcblx0Ly8gfSwgW2RlY2tdKVxuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRzZXRDb3VudChjb3VudCA9PiBjb3VudCArIDEpO1xuXHRcdH0sIDQwMDApO1xuXHR9KTtcblxuXHQvLyBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gICBzZXRDb3VudChjb3VudCA9PiBjb3VudCArIDEpO1xuXHQvLyB9LCAxMDApO1xuXHQvLyByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG5cdC8vIH0sIFtdKTtcblxuXG5cdC8vIHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gXHRjb25zb2xlLmxvZygncHAnKTtcblx0Ly8gXHRkZWNrLnBvcCgpO1xuXHQvLyB9LCA0MDAwKTtcblxuXHQvLyBzZXRUaW1lb3V0KCgpID0+IHtcblx0Ly8gXHRkZWNrLnBvcCgpXG5cdC8vIH0sIDUwMDApO1xuXG5cdC8vIGNvbnN0IHNodWZmbGVOZXdEZWNrID0gKCkgPT4ge1xuXHQvLyBcdC8vZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0Ly8gXHRsZXQgZGVjazEgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gXHRsZXQgZGVjazQgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblxuXHQvLyBcdGRlY2sxLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblx0Ly8gXHRzZXREZWNrKFtcblx0Ly8gXHQgIC4uLnBsYXlpbmdEZWNrLFxuXHQvLyBcdCAgLi4uZGVjazFcblx0Ly8gXHRdKTtcblx0Ly8gfTtcblxuXHQvLyBjb25zdCBkZWFsID0gKHBlcnNvbikgPT4ge1xuXHQvLyBcdHZhciBjYXJkID0gcGxheWluZ0RlY2sucG9wKCk7XG5cdC8vIFx0c3dpdGNoIChwZXJzb24pIHtcblx0Ly8gXHRcdGNhc2UgXCJwbGF5ZXJcIjpcblx0Ly8gXHRcdFx0c2V0UGxheWVyKFsuLi5wbGF5ZXJIYW5kLGNhcmRdKTtcblx0Ly8gXHRcdFx0YnJlYWs7XG5cdC8vIFx0XHRjYXNlIFwiZGVhbGVyXCI6XG5cdC8vIFx0XHRcdHNldERlYWxlcihbLi4ucGxheWVySGFuZCxjYXJkXSk7XG5cdC8vIFx0XHRcdGJyZWFrO1xuXHQvLyBcdFx0ZGVmYXVsdDpcblx0Ly8gXHRcdFx0YnJlYWs7XG5cdC8vIFx0fVxuXHQvLyB9O1xuXG5cdC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdC8vICAgc2h1ZmZsZU5ld0RlY2soKTtcblx0Ly8gfSwgW10pO1xuXG5cdC8vIHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gXHQvLyBkZWFsKFwicGxheWVyXCIpO1xuXHQvLyBcdGNvbnNvbGUubG9nKFwiMTExXCIpO1xuXHQvLyB9LCAxMDAwMCk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuXG5cdFx0PFRleHQ+Q291bnQ6IDwvVGV4dD47XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=