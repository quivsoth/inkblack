'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box,
  Button
} = require('ink'); // const TextInput = require('ink-text-input').default;


const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  let deck = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck2 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck3 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck4 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck5 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  let deck6 = Shuffle({
    Deck
  }).map(a => ({ ...a
  }));
  deck.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  const [playingDeck, setDeck] = React.useState(deck);
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement("button", {
    style: {
      position: "relative"
    }
  }, /*#__PURE__*/React.createElement(Ink, null)), /*#__PURE__*/React.createElement(Text, null, "Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsIkJ1dHRvbiIsIlNodWZmbGUiLCJEZWNrIiwiQXBwIiwiZGVjayIsIm1hcCIsImEiLCJkZWNrMiIsImRlY2szIiwiZGVjazQiLCJkZWNrNSIsImRlY2s2IiwicHVzaCIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInVzZVN0YXRlIiwicG9zaXRpb24iLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07QUFBQ0MsRUFBQUEsTUFBRDtBQUFTQyxFQUFBQSxJQUFUO0FBQWVDLEVBQUFBLEtBQWY7QUFBc0JDLEVBQUFBLEdBQXRCO0FBQTJCQyxFQUFBQTtBQUEzQixJQUFxQ0wsT0FBTyxDQUFDLEtBQUQsQ0FBbEQsQyxDQUNBOzs7QUFDQSxNQUFNTSxPQUFPLEdBQUdOLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVEsR0FBRyxHQUFHLE1BQU07QUFHakIsTUFBSUMsSUFBSSxHQUFHSCxPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWDtBQUNBLE1BQUlDLEtBQUssR0FBR04sT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQSxNQUFJRSxLQUFLLEdBQUdQLE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFaO0FBQ0EsTUFBSUcsS0FBSyxHQUFHUixPQUFPLENBQUM7QUFBQ0MsSUFBQUE7QUFBRCxHQUFELENBQVAsQ0FBZ0JHLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEdBQUwsQ0FBckIsQ0FBWjtBQUNBLE1BQUlJLEtBQUssR0FBR1QsT0FBTyxDQUFDO0FBQUNDLElBQUFBO0FBQUQsR0FBRCxDQUFQLENBQWdCRyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixHQUFMLENBQXJCLENBQVo7QUFDQSxNQUFJSyxLQUFLLEdBQUdWLE9BQU8sQ0FBQztBQUFDQyxJQUFBQTtBQUFELEdBQUQsQ0FBUCxDQUFnQkcsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosR0FBTCxDQUFyQixDQUFaO0FBQ0FGLEVBQUFBLElBQUksQ0FBQ1EsSUFBTCxDQUFVLEdBQUdMLEtBQWIsRUFBb0IsR0FBR0MsS0FBdkIsRUFBOEIsR0FBR0MsS0FBakMsRUFBd0MsR0FBR0MsS0FBM0MsRUFBa0QsR0FBR0MsS0FBckQ7QUFDQSxRQUFNLENBQUNFLFdBQUQsRUFBY0MsT0FBZCxJQUF5QnBCLEtBQUssQ0FBQ3FCLFFBQU4sQ0FBZVgsSUFBZixDQUEvQjtBQUdDLHNCQUNFLG9CQUFDLEdBQUQscUJBQ0Y7QUFBUSxJQUFBLEtBQUssRUFBRTtBQUFFWSxNQUFBQSxRQUFRLEVBQUU7QUFBWjtBQUFmLGtCQUNDLG9CQUFDLEdBQUQsT0FERCxDQURFLGVBS0Ysb0JBQUMsSUFBRCxtQkFBY0gsV0FBVyxDQUFDSSxNQUExQixNQUxFLENBREY7QUFTRCxDQXRCRDs7QUF3QkFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3JlbmRlciwgVGV4dCwgQ29sb3IsIEJveCwgQnV0dG9ufSA9IHJlcXVpcmUoJ2luaycpO1xuLy8gY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cblxuXHRsZXQgZGVjayA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrMyA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNCA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGxldCBkZWNrNiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdGRlY2sucHVzaCguLi5kZWNrMiwgLi4uZGVjazMsIC4uLmRlY2s0LCAuLi5kZWNrNSwgLi4uZGVjazYpO1xuXHRjb25zdCBbcGxheWluZ0RlY2ssIHNldERlY2tdID0gUmVhY3QudXNlU3RhdGUoZGVjayk7XG5cblxuICByZXR1cm4gKFxuICAgIDxCb3g+XG5cdFx0PGJ1dHRvbiBzdHlsZT17eyBwb3NpdGlvbjogXCJyZWxhdGl2ZVwiIH19PlxuXHRcdFx0PEluayAvPlxuICBcdFx0PC9idXR0b24+XG5cblx0XHQ8VGV4dD5Db3VudDoge3BsYXlpbmdEZWNrLmxlbmd0aH0gPC9UZXh0PlxuICAgIDwvQm94PlxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7Il19