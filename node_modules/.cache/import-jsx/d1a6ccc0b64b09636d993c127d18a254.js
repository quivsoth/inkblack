'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const Counter = require('./counter');

const App = () => {
  const [playingDeck, setDeck] = React.useState(MultiShuffle());
  const [value, setValue] = useState("");
  const addHello = useCallback(() => setValue(value + "Hello!"), [value]); // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [counter, setCounter] = React.useState(0);
  // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);
  // React.useEffect(() => {
  // 	const timer = setInterval(() => {
  // 			//console.log('Intervalled');
  // 			playingDeck.pop();
  // 			setCounter(Math.round(Math.random() * 15));
  // 		}
  // 		,200);
  // 	return () => {
  // 		clearInterval(timer);
  // 	};
  // }, []);

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "), /*#__PURE__*/React.createElement(Counter, {
    addHello: addHello,
    myObject: {
      key: "value"
    }
  }));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkNvdW50ZXIiLCJBcHAiLCJwbGF5aW5nRGVjayIsInNldERlY2siLCJ1c2VTdGF0ZSIsInZhbHVlIiwic2V0VmFsdWUiLCJhZGRIZWxsbyIsInVzZUNhbGxiYWNrIiwibGVuZ3RoIiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLFFBQUQ7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUEsSUFBbkI7QUFBeUJDLEVBQUFBLEtBQXpCO0FBQWdDQyxFQUFBQTtBQUFoQyxJQUF1Q0wsT0FBTyxDQUFDLEtBQUQsQ0FBcEQsQyxDQUNBOzs7QUFDQSxNQUFNTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxXQUFELENBQTVCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsTUFBTVEsT0FBTyxHQUFHUixPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFFQSxNQUFNUyxHQUFHLEdBQUcsTUFBTTtBQUVqQixRQUFNLENBQUNDLFdBQUQsRUFBY0MsT0FBZCxJQUF5QlosS0FBSyxDQUFDYSxRQUFOLENBQWVOLFlBQVksRUFBM0IsQ0FBL0I7QUFJQSxRQUFNLENBQUNPLEtBQUQsRUFBUUMsUUFBUixJQUFvQkYsUUFBUSxDQUFDLEVBQUQsQ0FBbEM7QUFDQSxRQUFNRyxRQUFRLEdBQUdDLFdBQVcsQ0FBQyxNQUFNRixRQUFRLENBQUNELEtBQUssR0FBRyxRQUFULENBQWYsRUFBbUMsQ0FBQ0EsS0FBRCxDQUFuQyxDQUE1QixDQVBpQixDQVVqQjtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxJQUFELHdCQUFtQkgsV0FBVyxDQUFDTyxNQUEvQixNQURELGVBRUMsb0JBQUMsT0FBRDtBQUFTLElBQUEsUUFBUSxFQUFFRixRQUFuQjtBQUE2QixJQUFBLFFBQVEsRUFBRTtBQUFFRyxNQUFBQSxHQUFHLEVBQUU7QUFBUDtBQUF2QyxJQUZELENBREQ7QUFNQSxDQXJDRDs7QUF1Q0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlgsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7dXNlSW5wdXQsIHJlbmRlciwgVGV4dCwgQ29sb3IsIEJveH0gPSByZXF1aXJlKCdpbmsnKTtcbi8vIGNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoJ2luay10ZXh0LWlucHV0JykuZGVmYXVsdDtcbmNvbnN0IE11bHRpU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuY29uc3QgQ291bnRlciA9IHJlcXVpcmUoJy4vY291bnRlcicpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cblx0Y29uc3QgW3BsYXlpbmdEZWNrLCBzZXREZWNrXSA9IFJlYWN0LnVzZVN0YXRlKE11bHRpU2h1ZmZsZSgpKTtcblxuXG5cblx0Y29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgYWRkSGVsbG8gPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRWYWx1ZSh2YWx1ZSArIFwiSGVsbG8hXCIpLCBbdmFsdWVdKTtcbiAgXG5cblx0Ly8gY29uc3QgW3BsYXllckhhbmQsIHNldFBsYXllcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdC8vIGNvbnN0IFtkZWFsZXJIYW5kLCBzZXREZWFsZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbY291bnRlciwgc2V0Q291bnRlcl0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcblxuXHQvLyBzZXREZWNrKFtcblx0Ly8gXHQuLi5wbGF5aW5nRGVjayxcblx0Ly8gXHQuLi5kZWNrXG5cdC8vIF0pO1xuXG5cdC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdC8vIFx0Y29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cdC8vIFx0XHRcdC8vY29uc29sZS5sb2coJ0ludGVydmFsbGVkJyk7XG5cdC8vIFx0XHRcdHBsYXlpbmdEZWNrLnBvcCgpO1xuXHQvLyBcdFx0XHRzZXRDb3VudGVyKE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE1KSk7XG5cdC8vIFx0XHR9XG5cdC8vIFx0XHQsMjAwKTtcblx0Ly8gXHRyZXR1cm4gKCkgPT4ge1xuXHQvLyBcdFx0Y2xlYXJJbnRlcnZhbCh0aW1lcik7XG5cdC8vIFx0fTtcblx0Ly8gfSwgW10pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveD5cblx0XHRcdDxUZXh0PkNhcmQgQ291bnQ6IHtwbGF5aW5nRGVjay5sZW5ndGh9IDwvVGV4dD5cblx0XHRcdDxDb3VudGVyIGFkZEhlbGxvPXthZGRIZWxsb30gbXlPYmplY3Q9e3sga2V5OiBcInZhbHVlXCIgfX0gLz5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwOyJdfQ==