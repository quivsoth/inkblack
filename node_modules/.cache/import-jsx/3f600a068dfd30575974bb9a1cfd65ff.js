'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box
} = require('ink');

const TextInput = require('ink-text-input').default;

const Shuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  // const [playerHand, setPlayer] = React.useState([]);
  // const [dealerHand, setDealer] = React.useState([]);
  // const [playingDeck, setDeck] = React.useState([]);
  React.useEffect; // const shuffleNewDeck = () => {
  // 	//event.preventDefault();
  // 	let deck1 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck2 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck3 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck4 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck5 = Shuffle({Deck}).map(a => ({...a}));
  // 	let deck6 = Shuffle({Deck}).map(a => ({...a}));
  // 	deck1.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
  // 	setDeck([
  // 	  ...playingDeck,
  // 	  ...deck1
  // 	]);
  // };
  // const deal = (person) => {
  // 	var card = playingDeck.pop();
  // 	switch (person) {
  // 		case "player":
  // 			setPlayer([...playerHand,card]);
  // 			break;
  // 		case "dealer":
  // 			setDealer([...playerHand,card]);
  // 			break;
  // 		default:
  // 			break;
  // 	}
  // };
  // React.useEffect(() => {
  //   shuffleNewDeck();
  // }, []);
  // setInterval(() => {
  // 	// deal("player");
  // 	console.log("111");
  // }, 10000);

  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Deck Count: ", playingDeck.length));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJTaHVmZmxlIiwiRGVjayIsIkFwcCIsInVzZUVmZmVjdCIsInBsYXlpbmdEZWNrIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLE1BQUQ7QUFBU0MsRUFBQUEsSUFBVDtBQUFlQyxFQUFBQSxLQUFmO0FBQXNCQyxFQUFBQTtBQUF0QixJQUE2QkosT0FBTyxDQUFDLEtBQUQsQ0FBMUM7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQk0sT0FBNUM7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFDQSxNQUFNUSxJQUFJLEdBQUdSLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUVBLE1BQU1TLEdBQUcsR0FBRyxNQUFNO0FBQ2pCO0FBQ0E7QUFDQTtBQUVBVixFQUFBQSxLQUFLLENBQUNXLFNBQU4sQ0FMaUIsQ0FTakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUMsc0JBQ0Usb0JBQUMsR0FBRCxxQkFDRixvQkFBQyxJQUFELHdCQUFtQkMsV0FBVyxDQUFDQyxNQUEvQixDQURFLENBREY7QUFLRCxDQXJERDs7QUFzREFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkwsR0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7cmVuZGVyLCBUZXh0LCBDb2xvciwgQm94fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZSgnaW5rLXRleHQtaW5wdXQnKS5kZWZhdWx0O1xuY29uc3QgU2h1ZmZsZSA9IHJlcXVpcmUoJy4vc2h1ZmZsZScpO1xuY29uc3QgRGVjayA9IHJlcXVpcmUoJy4vZGVjaycpO1xuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdC8vIGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHQvLyBjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Ly8gY29uc3QgW3BsYXlpbmdEZWNrLCBzZXREZWNrXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuXHRSZWFjdC51c2VFZmZlY3Rcblx0XG5cblx0XG5cdC8vIGNvbnN0IHNodWZmbGVOZXdEZWNrID0gKCkgPT4ge1xuXHQvLyBcdC8vZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0Ly8gXHRsZXQgZGVjazEgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0Ly8gXHRsZXQgZGVjazQgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHQvLyBcdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdC8vIFx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblxuXHQvLyBcdGRlY2sxLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblx0Ly8gXHRzZXREZWNrKFtcblx0Ly8gXHQgIC4uLnBsYXlpbmdEZWNrLFxuXHQvLyBcdCAgLi4uZGVjazFcblx0Ly8gXHRdKTtcblx0Ly8gfTtcblxuXHQvLyBjb25zdCBkZWFsID0gKHBlcnNvbikgPT4ge1xuXHQvLyBcdHZhciBjYXJkID0gcGxheWluZ0RlY2sucG9wKCk7XG5cdC8vIFx0c3dpdGNoIChwZXJzb24pIHtcblx0Ly8gXHRcdGNhc2UgXCJwbGF5ZXJcIjpcblx0Ly8gXHRcdFx0c2V0UGxheWVyKFsuLi5wbGF5ZXJIYW5kLGNhcmRdKTtcblx0Ly8gXHRcdFx0YnJlYWs7XG5cdC8vIFx0XHRjYXNlIFwiZGVhbGVyXCI6XG5cdC8vIFx0XHRcdHNldERlYWxlcihbLi4ucGxheWVySGFuZCxjYXJkXSk7XG5cdC8vIFx0XHRcdGJyZWFrO1xuXHQvLyBcdFx0ZGVmYXVsdDpcblx0Ly8gXHRcdFx0YnJlYWs7XG5cdC8vIFx0fVxuXHQvLyB9O1xuXG5cdC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdC8vICAgc2h1ZmZsZU5ld0RlY2soKTtcblx0Ly8gfSwgW10pO1xuXG5cdC8vIHNldEludGVydmFsKCgpID0+IHtcblx0Ly8gXHQvLyBkZWFsKFwicGxheWVyXCIpO1xuXHQvLyBcdGNvbnNvbGUubG9nKFwiMTExXCIpO1xuXHQvLyB9LCAxMDAwMCk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuXHRcdDxUZXh0PkRlY2sgQ291bnQ6IHtwbGF5aW5nRGVjay5sZW5ndGh9PC9UZXh0PlxuICAgIDwvQm94PlxuICApO1xufTtcbm1vZHVsZS5leHBvcnRzID0gQXBwOyJdfQ==