'use strict';

const React = require('react');

const {
  render,
  Text,
  Color,
  Box
} = require('ink');

const TextInput = require('ink-text-input').default;

const Shuffle = require('./shuffle');

const App = () => {
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]);
  const [playingDeck, setDeck] = React.useState([]);

  const shuffleNewDeck = () => {
    //event.preventDefault();
    let deck1 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    let deck2 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    let deck3 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    let deck4 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    let deck5 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    let deck6 = Shuffle({
      Deck
    }).map(a => ({ ...a
    }));
    deck1.push(...deck2, ...deck3, ...deck4, ...deck5, ...deck6);
    setDeck([...playingDeck, ...deck1]);
  };

  React.useEffect(() => {
    shuffleNewDeck();
  }, []);
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "HU"));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInJlbmRlciIsIlRleHQiLCJDb2xvciIsIkJveCIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJTaHVmZmxlIiwiQXBwIiwicGxheWVySGFuZCIsInNldFBsYXllciIsInVzZVN0YXRlIiwiZGVhbGVySGFuZCIsInNldERlYWxlciIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInNodWZmbGVOZXdEZWNrIiwiZGVjazEiLCJEZWNrIiwibWFwIiwiYSIsImRlY2syIiwiZGVjazMiLCJkZWNrNCIsImRlY2s1IiwiZGVjazYiLCJwdXNoIiwidXNlRWZmZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLE1BQUQ7QUFBU0MsRUFBQUEsSUFBVDtBQUFlQyxFQUFBQSxLQUFmO0FBQXNCQyxFQUFBQTtBQUF0QixJQUE2QkosT0FBTyxDQUFDLEtBQUQsQ0FBMUM7O0FBQ0EsTUFBTUssU0FBUyxHQUFHTCxPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQk0sT0FBNUM7O0FBQ0EsTUFBTUMsT0FBTyxHQUFHUCxPQUFPLENBQUMsV0FBRCxDQUF2Qjs7QUFFQSxNQUFNUSxHQUFHLEdBQUcsTUFBTTtBQUNqQixRQUFNLENBQUNDLFVBQUQsRUFBYUMsU0FBYixJQUEwQlgsS0FBSyxDQUFDWSxRQUFOLENBQWUsRUFBZixDQUFoQztBQUNBLFFBQU0sQ0FBQ0MsVUFBRCxFQUFhQyxTQUFiLElBQTBCZCxLQUFLLENBQUNZLFFBQU4sQ0FBZSxFQUFmLENBQWhDO0FBQ0EsUUFBTSxDQUFDRyxXQUFELEVBQWNDLE9BQWQsSUFBeUJoQixLQUFLLENBQUNZLFFBQU4sQ0FBZSxFQUFmLENBQS9COztBQUlBLFFBQU1LLGNBQWMsR0FBRyxNQUFNO0FBQzVCO0FBQ0EsUUFBSUMsS0FBSyxHQUFHVixPQUFPLENBQUM7QUFBQ1csTUFBQUE7QUFBRCxLQUFELENBQVAsQ0FBZ0JDLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEtBQUwsQ0FBckIsQ0FBWjtBQUNBLFFBQUlDLEtBQUssR0FBR2QsT0FBTyxDQUFDO0FBQUNXLE1BQUFBO0FBQUQsS0FBRCxDQUFQLENBQWdCQyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixLQUFMLENBQXJCLENBQVo7QUFDQSxRQUFJRSxLQUFLLEdBQUdmLE9BQU8sQ0FBQztBQUFDVyxNQUFBQTtBQUFELEtBQUQsQ0FBUCxDQUFnQkMsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosS0FBTCxDQUFyQixDQUFaO0FBQ0EsUUFBSUcsS0FBSyxHQUFHaEIsT0FBTyxDQUFDO0FBQUNXLE1BQUFBO0FBQUQsS0FBRCxDQUFQLENBQWdCQyxHQUFoQixDQUFvQkMsQ0FBQyxLQUFLLEVBQUMsR0FBR0E7QUFBSixLQUFMLENBQXJCLENBQVo7QUFDQSxRQUFJSSxLQUFLLEdBQUdqQixPQUFPLENBQUM7QUFBQ1csTUFBQUE7QUFBRCxLQUFELENBQVAsQ0FBZ0JDLEdBQWhCLENBQW9CQyxDQUFDLEtBQUssRUFBQyxHQUFHQTtBQUFKLEtBQUwsQ0FBckIsQ0FBWjtBQUNBLFFBQUlLLEtBQUssR0FBR2xCLE9BQU8sQ0FBQztBQUFDVyxNQUFBQTtBQUFELEtBQUQsQ0FBUCxDQUFnQkMsR0FBaEIsQ0FBb0JDLENBQUMsS0FBSyxFQUFDLEdBQUdBO0FBQUosS0FBTCxDQUFyQixDQUFaO0FBRUFILElBQUFBLEtBQUssQ0FBQ1MsSUFBTixDQUFXLEdBQUdMLEtBQWQsRUFBcUIsR0FBR0MsS0FBeEIsRUFBK0IsR0FBR0MsS0FBbEMsRUFBeUMsR0FBR0MsS0FBNUMsRUFBbUQsR0FBR0MsS0FBdEQ7QUFDQVYsSUFBQUEsT0FBTyxDQUFDLENBQ04sR0FBR0QsV0FERyxFQUVOLEdBQUdHLEtBRkcsQ0FBRCxDQUFQO0FBSUUsR0FkSDs7QUFnQkFsQixFQUFBQSxLQUFLLENBQUM0QixTQUFOLENBQWdCLE1BQU07QUFDcEJYLElBQUFBLGNBQWM7QUFDZixHQUZELEVBRUcsRUFGSDtBQUlDLHNCQUNFLG9CQUFDLEdBQUQscUJBQ0Ysb0JBQUMsSUFBRCxhQURFLENBREY7QUFLRCxDQWhDRDs7QUFrQ0FZLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3JlbmRlciwgVGV4dCwgQ29sb3IsIEJveH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoJ2luay10ZXh0LWlucHV0JykuZGVmYXVsdDtcbmNvbnN0IFNodWZmbGUgPSByZXF1aXJlKCcuL3NodWZmbGUnKTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbcGxheWVySGFuZCwgc2V0UGxheWVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Y29uc3QgW2RlYWxlckhhbmQsIHNldERlYWxlcl0gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cdGNvbnN0IFtwbGF5aW5nRGVjaywgc2V0RGVja10gPSBSZWFjdC51c2VTdGF0ZShbXSk7XG5cblxuXG5cdGNvbnN0IHNodWZmbGVOZXdEZWNrID0gKCkgPT4ge1xuXHRcdC8vZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRsZXQgZGVjazEgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHRcdGxldCBkZWNrMiA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdFx0bGV0IGRlY2szID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblx0XHRsZXQgZGVjazQgPSBTaHVmZmxlKHtEZWNrfSkubWFwKGEgPT4gKHsuLi5hfSkpO1xuXHRcdGxldCBkZWNrNSA9IFNodWZmbGUoe0RlY2t9KS5tYXAoYSA9PiAoey4uLmF9KSk7XG5cdFx0bGV0IGRlY2s2ID0gU2h1ZmZsZSh7RGVja30pLm1hcChhID0+ICh7Li4uYX0pKTtcblxuXHRcdGRlY2sxLnB1c2goLi4uZGVjazIsIC4uLmRlY2szLCAuLi5kZWNrNCwgLi4uZGVjazUsIC4uLmRlY2s2KTtcblx0XHRzZXREZWNrKFtcblx0XHQgIC4uLnBsYXlpbmdEZWNrLFxuXHRcdCAgLi4uZGVjazFcblx0XHRdKTtcblx0ICB9O1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdCAgc2h1ZmZsZU5ld0RlY2soKVxuXHR9LCBbXSlcblxuICByZXR1cm4gKFxuICAgIDxCb3g+XG5cdFx0PFRleHQ+SFU8L1RleHQ+XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=