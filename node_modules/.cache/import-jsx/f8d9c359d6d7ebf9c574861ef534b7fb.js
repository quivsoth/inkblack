'use strict';

const React = require('react');

const {
  useInput,
  render,
  Text,
  Color,
  Box
} = require('ink'); // const TextInput = require('ink-text-input').default;


const MultiShuffle = require('./shuffle');

const Deck = require('./deck');

const App = () => {
  const [playingDeck, setDeck] = React.useState(MultiShuffle());
  const [playerHand, setPlayer] = React.useState([]);
  const [dealerHand, setDealer] = React.useState([]);
  const [counter, setCounter] = React.useState(0); // setDeck([
  // 	...playingDeck,
  // 	...deck
  // ]);

  React.useEffect(() => {
    const timer = setInterval(() => {
      //console.log('Intervalled');
      playingDeck.pop();
      setCounter(Math.round(Math.random() * 15));
    }, 2000);
    return () => {
      clearInterval(timer);
    };
  }, []);
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, "Card Count: ", playingDeck.length, " "));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZUlucHV0IiwicmVuZGVyIiwiVGV4dCIsIkNvbG9yIiwiQm94IiwiTXVsdGlTaHVmZmxlIiwiRGVjayIsIkFwcCIsInBsYXlpbmdEZWNrIiwic2V0RGVjayIsInVzZVN0YXRlIiwicGxheWVySGFuZCIsInNldFBsYXllciIsImRlYWxlckhhbmQiLCJzZXREZWFsZXIiLCJjb3VudGVyIiwic2V0Q291bnRlciIsInVzZUVmZmVjdCIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJwb3AiLCJNYXRoIiwicm91bmQiLCJyYW5kb20iLCJjbGVhckludGVydmFsIiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLFFBQUQ7QUFBV0MsRUFBQUEsTUFBWDtBQUFtQkMsRUFBQUEsSUFBbkI7QUFBeUJDLEVBQUFBLEtBQXpCO0FBQWdDQyxFQUFBQTtBQUFoQyxJQUF1Q0wsT0FBTyxDQUFDLEtBQUQsQ0FBcEQsQyxDQUNBOzs7QUFDQSxNQUFNTSxZQUFZLEdBQUdOLE9BQU8sQ0FBQyxXQUFELENBQTVCOztBQUNBLE1BQU1PLElBQUksR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBRUEsTUFBTVEsR0FBRyxHQUFHLE1BQU07QUFFakIsUUFBTSxDQUFDQyxXQUFELEVBQWNDLE9BQWQsSUFBeUJYLEtBQUssQ0FBQ1ksUUFBTixDQUFlTCxZQUFZLEVBQTNCLENBQS9CO0FBQ0EsUUFBTSxDQUFDTSxVQUFELEVBQWFDLFNBQWIsSUFBMEJkLEtBQUssQ0FBQ1ksUUFBTixDQUFlLEVBQWYsQ0FBaEM7QUFDQSxRQUFNLENBQUNHLFVBQUQsRUFBYUMsU0FBYixJQUEwQmhCLEtBQUssQ0FBQ1ksUUFBTixDQUFlLEVBQWYsQ0FBaEM7QUFDQSxRQUFNLENBQUNLLE9BQUQsRUFBVUMsVUFBVixJQUF3QmxCLEtBQUssQ0FBQ1ksUUFBTixDQUFlLENBQWYsQ0FBOUIsQ0FMaUIsQ0FPakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUFaLEVBQUFBLEtBQUssQ0FBQ21CLFNBQU4sQ0FBZ0IsTUFBTTtBQUNyQixVQUFNQyxLQUFLLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO0FBRTlCO0FBQ0FYLE1BQUFBLFdBQVcsQ0FBQ1ksR0FBWjtBQUNBSixNQUFBQSxVQUFVLENBQUNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsRUFBM0IsQ0FBRCxDQUFWO0FBQ0EsS0FMdUIsRUFNdkIsSUFOdUIsQ0FBekI7QUFPQSxXQUFPLE1BQU07QUFDWkMsTUFBQUEsYUFBYSxDQUFDTixLQUFELENBQWI7QUFDQSxLQUZEO0FBR0EsR0FYRCxFQVdHLEVBWEg7QUFhQSxzQkFDQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLElBQUQsd0JBQW1CVixXQUFXLENBQUNpQixNQUEvQixNQURELENBREQ7QUFLQSxDQTlCRDs7QUFnQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3VzZUlucHV0LCByZW5kZXIsIFRleHQsIENvbG9yLCBCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG4vLyBjb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKCdpbmstdGV4dC1pbnB1dCcpLmRlZmF1bHQ7XG5jb25zdCBNdWx0aVNodWZmbGUgPSByZXF1aXJlKCcuL3NodWZmbGUnKTtcbmNvbnN0IERlY2sgPSByZXF1aXJlKCcuL2RlY2snKTtcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXG5cdGNvbnN0IFtwbGF5aW5nRGVjaywgc2V0RGVja10gPSBSZWFjdC51c2VTdGF0ZShNdWx0aVNodWZmbGUoKSk7XG5cdGNvbnN0IFtwbGF5ZXJIYW5kLCBzZXRQbGF5ZXJdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuXHRjb25zdCBbZGVhbGVySGFuZCwgc2V0RGVhbGVyXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblx0Y29uc3QgW2NvdW50ZXIsIHNldENvdW50ZXJdID0gUmVhY3QudXNlU3RhdGUoMCk7XG5cblx0Ly8gc2V0RGVjayhbXG5cdC8vIFx0Li4ucGxheWluZ0RlY2ssXG5cdC8vIFx0Li4uZGVja1xuXHQvLyBdKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuXG5cdFx0XHRcdC8vY29uc29sZS5sb2coJ0ludGVydmFsbGVkJyk7XG5cdFx0XHRcdHBsYXlpbmdEZWNrLnBvcCgpO1xuXHRcdFx0XHRzZXRDb3VudGVyKE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE1KSk7XG5cdFx0XHR9XG5cdFx0XHQsMjAwMCk7XG5cdFx0cmV0dXJuICgpID0+IHtcblx0XHRcdGNsZWFySW50ZXJ2YWwodGltZXIpO1xuXHRcdH07XG5cdH0sIFtdKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3g+XG5cdFx0XHQ8VGV4dD5DYXJkIENvdW50OiB7cGxheWluZ0RlY2subGVuZ3RofSA8L1RleHQ+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDsiXX0=